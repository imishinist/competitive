#include <algorithm>
#include <atcoder/all>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

using namespace std;

typedef long long ll;

#define rep(i, n) for (int(i) = 0; (i) < (n); (i)++)
#define reps(i, ini, n) for (int(i) = (ini); (i) < (n); (i)++)
#define rev(i, n) for (int(i) = n; (i) >= 0; (i)--)
#define revs(i, from, to) for (int(i) = from; (i) >= to; (i)--)
#define eps 1e-14

// Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools templates:
// (https://github.com/imishinist/competitive/blob/master/boilerplate/main.cpp)


int op(int s1, int s2) {
    return max(s1, s2);
}

int e() {
    return -1;
}

int main() {
    int N, Q;
    cin >> N >> Q;

    atcoder::segtree<int, op, e> seg(N);
    rep(i, N) {
        int a;
        cin >> a;
        seg.set(i, a);
    }
    int res = 0;
    auto f = [&](int c) {
        return res > c;
    };
    rep(i, Q) {
        int t, a, b;
        cin >> t >> a >> b;
        switch (t) {
            case 1:
                a--;
                seg.set(a, b);
                break;
            case 2:
                a--;
                b--;
                cout << seg.prod(a, b) << endl;
                break;
            case 3:
                a--;
                res = b;
                cout << seg.max_right(a, f)+1 << endl;
                break;
        }
    }

    return 0;
}
