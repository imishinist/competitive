#include <algorithm>
#include <atcoder/all>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iomanip>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

using namespace std;

using ll = long long;

#define rep(i, n) for (int(i) = 0; (i) < (n); (i)++)
#define reps(i, ini, n) for (int(i) = (ini); (i) < (n); (i)++)
#define rev(i, n) for (int(i) = n; (i) >= 0; (i)--)
#define revs(i, from, to) for (int(i) = from; (i) >= to; (i)--)
#define eps 1e-14

const string YES = "Yes";
const string NO = "No";

void solve(long long N, std::vector<long long> a, std::vector<long long> b) {
    vector<vector<int>> G = vector<vector<int>>(N, vector<int>());
    rep(i, N-1){
        int A = a[i]-1;
        int B = b[i]-1;
        G[A].push_back(B);
        G[B].push_back(A);
    }


    ll mx = 0;
    rep(i, N) {
        if (mx < G[i].size()) {
            mx = G[i].size();
        }
    }
    if (mx == N-1) {
        cout << YES << endl;
    } else {
        cout << NO << endl;
    }
}

// Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools templates:
// (https://github.com/imishinist/competitive/blob/master/boilerplate/main.cpp)
int main() {
    long long N;
    std::scanf("%lld", &N);
    std::vector<long long> a(N - 1);
    std::vector<long long> b(N - 1);
    for (int i = 0; i < N - 1; i++) {
        std::scanf("%lld", &a[i]);
        std::scanf("%lld", &b[i]);
    }
    solve(N, std::move(a), std::move(b));
    return 0;
}
