#include <algorithm>
#include <atcoder/all>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iomanip>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

using namespace std;

using ll = long long;

#define rep(i, n) for (int(i) = 0; (i) < (n); (i)++)
#define reps(i, ini, n) for (int(i) = (ini); (i) < (n); (i)++)
#define rev(i, n) for (int(i) = n; (i) >= 0; (i)--)
#define revs(i, from, to) for (int(i) = from; (i) >= to; (i)--)
#define eps 1e-14

// Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools templates:
// (https://github.com/imishinist/competitive/blob/master/boilerplate/main.cpp)
int main() {
    int n, q;
    cin >> n >> q;

    // 前から後ろ
    vector<int> g1(n+1, -1);
    // 後ろから前
    vector<int> g2(n+1, -1);

    function<int(int)> find_leader = [&](int x) -> int {
        if (g2[x] == -1) {
            return x;
        }
        return find_leader(g2[x]);
    };

    function<int(int)> countup = [&](int x) {
        if (g1[x] == -1) return 0;
        return countup(g1[x]) + 1;
    };

    function<void(int)> show_routes = [&](int x) {
        cout << " " << x + 1;
        if (g1[x] == -1) return;
        show_routes(g1[x]);
    };

    rep(i, q) {
        int t;
        cin >> t;
        if (t == 3) {
            int x;
            cin >> x;
            x--;
            int leader = find_leader(x);
            int M = countup(leader) + 1;

            cout << M;
            show_routes(leader);
            cout << endl;
        } else {
            int x, y;
            cin >> x >> y;
            x--; y--;
            if (t == 1) {
                g1[x] = y;
                g2[y] = x;
            } else {
                g1[x] = -1;
                g2[y] = -1;
            }
        }
    }

    return 0;
}
