#include <algorithm>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>
using namespace std;

typedef vector<int> vi;
typedef vector<pair<int, int>> vpii;
typedef long long ll;

#define eps 1e-14

void solve(long long N, std::vector<long long> A, long long X) {
    ll sum = 0;
    for (int i = 0; i < N; i++) {
        sum += A[i];
    }
    ll P = X / sum;
    ll sumb = P * sum;
    ll ans = P * N;
    for (int i = 0; i < N; i++) {
        sumb += A[i];
        ans++;
        if (sumb > X) {
            cout << ans << endl;
            return;
        }
    }
    return;
}

// Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools templates:
// (https://github.com/imishinist/competitive/blob/master/boilerplate/main.cpp)
int main() {
    long long N;
    std::scanf("%lld", &N);
    std::vector<long long> A(N);
    for (int i = 0; i < N; i++) {
        std::scanf("%lld", &A[i]);
    }
    long long X;
    std::scanf("%lld", &X);
    solve(N, std::move(A), X);
    return 0;
}
