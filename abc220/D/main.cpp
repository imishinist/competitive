#include <algorithm>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>
using namespace std;

typedef vector<int> vi;
typedef vector<pair<int, int>> vpii;
typedef long long ll;

#define eps 1e-14

const long long MOD = 998244353;
ll dp[100001][10];

void solve(long long N, std::vector<long long> A) {
    dp[1][A[0]] = 1;

    // A[i]までみたとき、数列の先頭がjになる通り数
    for (int i = 1; i < N; i++) {
        for (int j = 0; j < 10; j++) {
            dp[i+1][(j+A[i])%10] += dp[i][j] % MOD;
            dp[i+1][(j*A[i])%10] += dp[i][j] % MOD;
        }
    }
    for (int i = 0; i < 10; i++) {
        cout << dp[N][i] % MOD << endl;
    }
}

// Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools templates:
// (https://github.com/imishinist/competitive/blob/master/boilerplate/main.cpp)
int main() {
    long long N;
    std::scanf("%lld", &N);
    std::vector<long long> A(N);
    for (int i = 0; i < N; i++) {
        std::scanf("%lld", &A[i]);
    }
    solve(N, std::move(A));
    return 0;
}
