#include <algorithm>
#include <atcoder/all>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

using namespace std;

typedef long long ll;

#define rep(i, n) for (int(i) = 0; (i) < (n); (i)++)
#define reps(i, ini, n) for (int(i) = (ini); (i) < (n); (i)++)
#define rev(i, n) for (int(i) = n; (i) >= 0; (i)--)
#define revs(i, from, to) for (int(i) = from; (i) >= to; (i)--)
#define eps 1e-14

const string YES = "Yes";
const string NO = "No";

int op(int a, int b) {
    return a + b;
}

int e() {
    return 0;
}

// Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools templates:
// (https://github.com/imishinist/competitive/blob/master/boilerplate/main.cpp)
int main() {
    int N, Q;
    cin >> N >> Q;
    string S;
    cin >> S;

    atcoder::segtree<int, op, e> tree(N+1);

    rep(i, S.size()) {
        if (S[i] == '(') {
            tree.set(i, 1);
        } else {
            tree.set(i, -1);
        }
    }


    rep(i, N + 1) {
        cout << tree.get(i) << endl;
    }

    rep(i, Q) {
        int t, l, r;
        cin >> t >> l >> r;
        if (t == 1) {

        } else if (t == 2) {
            cout << ((tree.prod(0, l-1) == tree.prod(0, r)) ? YES : NO) << endl;
        }
    }
    return 0;
}
