#include <algorithm>
#include <atcoder/all>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iomanip>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

using namespace std;

typedef long long ll;

#define rep(i, n) for (int(i) = 0; (i) < (n); (i)++)
#define reps(i, ini, n) for (int(i) = (ini); (i) < (n); (i)++)
#define rev(i, n) for (int(i) = n; (i) >= 0; (i)--)
#define revs(i, from, to) for (int(i) = from; (i) >= to; (i)--)
#define eps 1e-14

const string YES = "Yes";
const string NO = "No";

void solve(long long H, long long W, std::vector<std::vector<long long>> A) {
    rep(i1, H) {
        rep(j1, W) {
            for (int i2 = i1; i2 < H; i2++) {
                for (int j2 = j1; j2 < W; j2++) {
                    if (A[i1][j1] + A[i2][j2] > A[i2][j1] + A[i1][j2]) {
                        cout << NO << endl;
                        return;
                    }
                }
            }
        }
    }
    cout << YES << endl;
}

// Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools templates:
// (https://github.com/imishinist/competitive/blob/master/boilerplate/main.cpp)
int main() {
    long long H;
    std::scanf("%lld", &H);
    long long W;
    std::scanf("%lld", &W);
    std::vector<std::vector<long long>> A(H, std::vector<long long>(W));
    for (int i = 0; i < H; i++) {
        for (int j = 0; j < W; j++) {
            std::scanf("%lld", &A[i][j]);
        }
    }
    solve(H, W, std::move(A));
    return 0;
}
