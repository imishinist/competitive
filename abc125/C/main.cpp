#include <algorithm>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>
using namespace std;

typedef long long ll;

#define rep(i,n) for (int (i) = 0; (i) < (n); (i)++)
#define reps(i,ini,n) for (int (i) = (ini); (i) < (n); (i)++)
#define rev(i,n) for (int (i) = n; (i) >= 0; (i)--)
#define revs(i,from,to) for (int (i) = from; (i) >= to; (i)--)
#define eps 1e-14

void solve(long long N, std::vector<long long> A) {
    vector<ll> L(N);
    vector<ll> R(N);

    R[0] = A[0];
    rep(i, N-1) R[i+1] = __gcd(R[i], A[i+1]);
    L[N-1] = A[N-1];
    revs(i, N-1, 1) L[i-1] = __gcd(L[i], A[i-1]);

    // 左端を消す場合と、右端を無視する場合
    ll ans = max(L[1], R[N-2]);
    reps(i, 1, N-1) ans = max(ans, __gcd(R[i-1], L[i+1]));
    cout << ans << endl;
}

// Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools templates:
// (https://github.com/imishinist/competitive/blob/master/boilerplate/main.cpp)
int main() {
    long long N;
    std::scanf("%lld", &N);
    std::vector<long long> A(N);
    for (int i = 0; i < N; i++) {
        std::scanf("%lld", &A[i]);
    }
    solve(N, std::move(A));
    return 0;
}
